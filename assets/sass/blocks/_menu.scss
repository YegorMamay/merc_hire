.home {
  & .nav {
    &-wrapper {
      border-bottom: none;
    }
  }
}

.language-switcher {
  & .menu-link {
    text-transform: uppercase;
    font-weight: 700;
    padding-top: 5px;
    padding-bottom: 5px;
  }

  & .sub-menu {
    & .lang-item {
      margin: 0;
      background: transparent;
    }

    &-link {
      color: $primary_color_1;

      &:hover, &:focus {
        color: $themeColorThree;
      }
    }
  }
}

.nav {
  display: block;
  position: relative;
  text-align: center;
  background: $menuBgColor;

  &-wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    width: 100%;
    border-top: 1px solid $nav_border_color;
    border-bottom: 1px solid $nav_border_color;
    margin-top: 5px;

    & .nav {
      width: 100%;
    }
  }

  .menu {
    &,
    &-container {
      @extend %reset-list;
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
    }

    &-item {
      display: inline-block;
      vertical-align: middle;
      padding: 5px;

      &:hover {
        & .menu-link {
          color: $menuFontColorActive;
        }
      }

      .menu-item-has-children-arrow {
        display: none;
      }

      &-close {
        cursor: pointer;
        position: relative;
        display: none;
        width: $menu-close-size;
        height: $menu-close-size;
        border: 0;
        background-color: transparent;
        -webkit-tap-highlight-color: transparent;
        touch-action: manipulation;

        &:focus {
          outline: 0;
          box-shadow: 0 0 0 4px rgba($menu-close-color, .2);
        }

        &::before,
        &::after {
          content: '';
          width: 100%;
          height: 2px;
          background-color: $menu-close-color;
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
          margin: auto;
        }

        &::before {
          transform: rotate(45deg);
        }

        &::after {
          transform: rotate(-45deg);
        }
      }

      &-has-children {
        position: relative;
        padding-right: 15px;

        &:hover {
          &::after {
            transform: rotate(-225deg);
            top: 20px;
            @extend %smooth_animation;
          }
        }

        &::after {
          content: "";
          position: absolute;
          top: 16px;
          right: 5px;
          display: block;
          width: 8px;
          height: 8px;
          border-bottom: 1px solid $primary_color_1;
          border-left: 1px solid $primary_color_1;
          transform: rotate(-45deg);
          @extend %smooth_animation;
        }
      }

      &-current {
        & .menu-link {
          color: $themeColorThree;
        }
      }

      .no-touch &:hover,
      &-current,
      &.current-menu-parent,
      &.current-menu-ancestor {
        .menu-link {
          text-decoration: none;
        }
      }

      .no-touch &:hover {
        > .sub-menu {
          top: 100%;
          visibility: visible;
          opacity: 1;
          z-index: 10;
        }
      }
    }

    &-link {
      display: block;
      padding: 8px 10px;
      color: $menuFontColor;
      font-size: 17px;
      line-height: normal;
      text-align: center;
      text-transform: none;
      text-decoration: none;
      @extend %smooth_animation;
    }
  }

  .sub-menu {
    @extend %reset-list;
    position: absolute;
    top: 300%;
    left: 0;
    z-index: -200;
    width: 250px;
    background-color: $menuBgColorActive;
    visibility: hidden;
    text-align: left;
    opacity: 0;
    @extend %smooth_animation;

    &-item {
      .menu-item-has-children-arrow {
        display: none;
      }

      &-has-children {
        position: relative;
        z-index: 1;

        &:hover {
          &::after {
            border-left-color: #fff;
          }
        }

        &::after {
          content: "";
          position: absolute;
          top: 12px;
          right: 5px;
          border: 5px solid $menuFontColor;
          border-color: transparent transparent transparent $menuFontColor;
          transition: border-color .3s ease-in-out;
        }
      }

      .no-touch &:hover,
      &-current {
        > .sub-menu-link {
          background-color: transparent;
          color: $menuFontColorActive;
        }
      }

      .no-touch &:hover {
        > .sub-menu {
          display: block;
          visibility: visible;
          opacity: 1;
          z-index: 5;
        }
      }
    }

    &-link {
      display: block;
      padding: 9px 15px;
      color: $menuFontColor;
      font-size: 14px;
      line-height: 1.3;
      text-decoration: none;
      @extend %smooth_animation;
    }

    .sub-menu {
      top: 0;
      left: 100%;
    }
  }
}

.hamburger {
  display: none;
  vertical-align: middle;
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
  transition: .2s ease-out;

  &:focus {
    outline: 0;
    box-shadow: 0 0 0 4px rgba($hamburger-color, .2);
  }

  &,
  &[type="button"] {
    cursor: pointer;
    border: 0;
    padding: 9px 5px;
    background-color: transparent;
  }

  &-box {
    display: block;
    width: 30px;
    padding: 9px 0;
  }

  &-inner {
    position: relative;
    transition: background-color 0s ease-out $hamburger-delay;

    &,
    &::before,
    &::after {
      display: block;
      width: 100%;
      height: 2px;
      background-color: $navHamburgerMobileColor;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      left: 0;
      transition: bottom $hamburger-duration ease-out $hamburger-delay, top $hamburger-duration ease-out $hamburger-delay, transform $hamburger-duration ease-out;
    }

    &::before {
      bottom: $hamburger-offset;
    }

    &::after {
      top: $hamburger-offset;
    }
  }
}

.is-active {
  .hamburger-inner {
    background-color: transparent;

    &::before,
    &::after {
      transition: bottom $hamburger-duration ease-out, top $hamburger-duration ease-out, transform $hamburger-duration ease-out $hamburger-delay;
    }

    &::before {
      bottom: 0;
      transform: rotate(45deg);
    }

    &::after {
      top: 0;
      transform: rotate(-45deg);
    }
  }
}
